<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sts.csgits.dao.ManagerMapper">
    <resultMap id="BaseResultMap" type="com.sts.csgits.entity.Manager">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="no" property="no" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="image_path" property="imagePath" jdbcType="VARCHAR" />
        <result column="tel" property="tel" jdbcType="VARCHAR" />
        <result column="college" property="college" jdbcType="VARCHAR" />
        <result column="fine" property="fine" jdbcType="BOOLEAN" />
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="school_id" property="schoolId" jdbcType="INTEGER" />
        <association property="school" javaType="com.sts.csgits.entity.School">
            <id column="id" property="id" jdbcType="INTEGER"/>
            <result column="name" property="name" jdbcType="VARCHAR"/>
            <result column="description" property="description" jdbcType="VARCHAR"/>
            <result column="image_path" property="imagePath" jdbcType="VARCHAR" />
            <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        </association>
    </resultMap>

    <sql id="BASEFIELD">
        manager.id, manager.no, manager.real_name, manager.password, manager.image_path, manager.tel, manager.college, manager.fine, manager.description, manager.create_time, manager.school_id
    </sql>

    <sql id="TOTALFIELD">
        manager.id, manager.no, manager.real_name, manager.password, manager.image_path, manager.tel, manager.college, manager.fine, manager.description, manager.create_time, manager.school_id, school.id, school.name, school.description, school.image_path, school.create_time
    </sql>

    <insert id="insert" parameterType="com.sts.csgits.entity.Manager" useGeneratedKeys="true"
            keyProperty="id">
        insert into manager
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="no != null">
                no,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="imagePath != null">
                image_path,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="fine != null">
                fine,
            </if>
            <if test="schoolId != null">
                school_id,
            </if>
            <if test="college != null">
                college,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="no != null">
                #{no, jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName, jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password, jdbcType=VARCHAR},
            </if>
            <if test="imagePath != null">
                #{imagePath, jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                #{tel, jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description, jdbcType=VARCHAR},
            </if>
            <if test="fine != null">
                #{fine, jdbcType=BOOLEAN},
            </if>
            <if test="schoolId != null">
                #{schoolId, jdbcType=INTEGER},
            </if>
            <if test="college != null">
                #{college, jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from manager
        where id = #{id, jdbcType=INTEGER}
    </delete>

    <update id="updateByPrimaryKey" parameterType="com.sts.csgits.entity.School">
        update manager
        <trim prefix="set" suffixOverrides=",">
            <if test="no != null">
                no = #{no, jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName, jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password, jdbcType=VARCHAR},
            </if>
            <if test="imagePath != null">
                image_path = #{imagePath, jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                tel = #{tel, jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description, jdbcType=VARCHAR},
            </if>
            <if test="fine != null">
                fine = #{fine, jdbcType=BOOLEAN},
            </if>
            <if test="schoolId != null">
                school_id = #{schoolId, jdbcType=INTEGER},
            </if>
            <if test="college != null">
                college = #{college, jdbcType=VARCHAR},
            </if>
        </trim>
        where id = #{id, jdbcType=INTEGER}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="TOTALFIELD"/>
        from manager
        left join school on manager.school_id = school.id
        where manager.id = #{id, jdbcType=INTEGER}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="TOTALFIELD"/>
        from manager
        left join school on manager.school_id = school.id
        order by manager.create_time desc
    </select>
    
    <select id="selectByNoAndPassword" parameterType="com.sts.csgits.entity.Manager" resultMap="BaseResultMap">
        select
        <include refid="BASEFIELD"/>
        from manager
        <where>
            <if test="no != null">
                and no = #{no}
            </if>
            <if test="password != null">
                and password = #{password}
            </if>
        </where>
    </select>

    <select id="selectByManager" parameterType="com.sts.csgits.entity.Manager" resultMap="BaseResultMap">
        select
        <include refid="TOTALFIELD"/>
        from manager
        left join school on manager.school_id = school.id
        <where>
            <if test="no != null">
                and no = #{no, jdbcType=VARCHAR}
            </if>
            <if test="realName != null">
                and real_name like CONCAT('%', #{realName, jdbcType=VARCHAR}, '%')
            </if>
            <if test="password != null">
                and password = #{password, jdbcType=VARCHAR}
            </if>
            <if test="imagePath != null">
                and image_path = #{imagePath, jdbcType=VARCHAR}
            </if>
            <if test="tel != null">
                and tel = #{tel, jdbcType=VARCHAR}
            </if>
            <if test="description != null">
                and description = #{description, jdbcType=VARCHAR}
            </if>
            <if test="fine != null">
                and fine = #{fine, jdbcType=BOOLEAN}
            </if>
            <if test="schoolId != null">
                and school_id = #{schoolId, jdbcType=INTEGER}
            </if>
            <if test="college != null">
                and college = #{college, jdbcType=VARCHAR}
            </if>
        </where>
        order by manager.create_time desc
    </select>

    <select id="selectNumByCondition" parameterType="com.sts.csgits.utils.Condition" resultType="java.lang.Integer">
        select count(*)
        from manager
        <where>
            <if test="mapConditions.no != null">
                and no = #{mapConditions.no, jdbcType=VARCHAR}
            </if>
            <if test="mapConditions.realName != null">
                and real_name = #{mapConditions.realName, jdbcType=VARCHAR}
            </if>
            <if test="mapConditions.password != null">
                and password = #{mapConditions.password, jdbcType=VARCHAR}
            </if>
            <if test="mapConditions.tel != null">
                and tel = #{mapConditions.tel, jdbcType=VARCHAR}
            </if>
            <if test="mapConditions.description != null">
                and description = #{mapConditions.description, jdbcType=VARCHAR}
            </if>
            <if test="mapConditions.fine != null">
                and fine = #{mapConditions.fine, jdbcType=BOOLEAN}
            </if>
            <if test="mapConditions.schoolId != null">
                and school_id = #{mapConditions.schoolId, jdbcType=INTEGER}
            </if>
            <if test="mapConditions.college != null">
                and college = #{mapConditions.college, jdbcType=VARCHAR}
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="selectByCondition" parameterType="com.sts.csgits.utils.Condition" resultMap="BaseResultMap">
        select
        <include refid="TOTALFIELD"/>
        from manager
        <where>
            <if test="mapConditions.no != null">
                and no = #{mapConditions.no, jdbcType=VARCHAR}
            </if>
            <if test="mapConditions.realName != null">
                and real_name = #{mapConditions.realName, jdbcType=VARCHAR}
            </if>
            <if test="mapConditions.password != null">
                and password = #{mapConditions.password, jdbcType=VARCHAR}
            </if>
            <if test="mapConditions.tel != null">
                and tel = #{mapConditions.tel, jdbcType=VARCHAR}
            </if>
            <if test="mapConditions.description != null">
                and description = #{mapConditions.description, jdbcType=VARCHAR}
            </if>
            <if test="mapConditions.fine != null">
                and fine = #{mapConditions.fine, jdbcType=BOOLEAN}
            </if>
            <if test="mapConditions.schoolId != null">
                and school_id = #{mapConditions.schoolId, jdbcType=INTEGER}
            </if>
            <if test="mapConditions.college != null">
                and college = #{mapConditions.college, jdbcType=VARCHAR}
            </if>
        </where>
        order by create_time desc
    </select>
</mapper>