<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sts.csgits.dao.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.sts.csgits.entity.Goods">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="image_path" property="imagePath" jdbcType="VARCHAR" />
        <result column="num" property="num" jdbcType="INTEGER" />
        <result column="credits" property="credits" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="BASEFIELD">
        id, name, description, image_path, num, credits, create_time
    </sql>

    <insert id="insert" parameterType="com.sts.csgits.entity.Goods" useGeneratedKeys="true"
            keyProperty="id">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="imagePath != null">
                image_path,
            </if>
            <if test="num != null">
                num,
            </if>
            <if test="credits != null">
                credits,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name, jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description, jdbcType=VARCHAR},
            </if>
            <if test="imagePath != null">
                #{imagePath, jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                #{num, jdbcType=INTEGER},
            </if>
            <if test="credits != null">
                #{credits, jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from goods
        where id = #{id, jdbcType=INTEGER}
    </delete>

    <update id="updateByPrimaryKey" parameterType="com.sts.csgits.entity.School">
        update goods
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null">
                name = #{name, jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description, jdbcType=VARCHAR},
            </if>
            <if test="imagePath != null">
                image_path = #{imagePath, jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                num = #{num, jdbcType=INTEGER},
            </if>
            <if test="credits != null">
                credits = #{credits, jdbcType=INTEGER},
            </if>
        </trim>
        where id = #{id, jdbcType=INTEGER}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="BASEFIELD"/>
        from goods
        where id = #{id, jdbcType=INTEGER}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="BASEFIELD"/>
        from goods order by create_time desc
    </select>

    <select id="selectByGoods" parameterType="com.sts.csgits.entity.School" resultMap="BaseResultMap">
        select
        <include refid="BASEFIELD"/>
        from goods
        <where>
            <if test="name != null">
                and name like CONCAT('%', #{name, jdbcType=VARCHAR}, '%')
            </if>
            <if test="description != null">
                and description = #{description, jdbcType=VARCHAR}
            </if>
            <if test="num != null">
                and num = #{num, jdbcType=INTEGER}
            </if>
            <if test="credits != null">
                and credits = #{credits, jdbcType=INTEGER}
            </if>
        </where>
        order by create_time desc
    </select>
</mapper>